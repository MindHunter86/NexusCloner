# Github Actions: NexusCloner code builder
name: NexusCloner code builder

on:
  release:
    types:
      - created

jobs:
  parse_phase:
    name: Get build tag for further artifact pushing
    runs-on: ubuntu-latest
    env:
      JOB_REF: ${{ github.ref }}
    outputs:
      build_tag: ${{ steps.get-tag-from-ref.outputs.build_tag }}
    steps:
    - id: get-tag-from-ref
      run: echo "::set-output name=build_tag::${GITHUB_REF#refs/*/}"
    - run: |
        cat <<-EOF
          Github Actions outputs debug:
          Triggired tag - ${{ github.ref }}
          Build Tag - ${{ steps.get-tag-from-ref.outputs.build_tag }}
        EOF
  docker_build_phase:
    name: Build standalone binary and docker image
    runs-on: ubuntu-latest
    needs: [ parse_phase ]
    steps:
    - name: Get source code
      uses: actions/checkout@v2
      with:
        path: nexuscloner
    # here we trying to use NEW github cache backend - https://github.com/docker/buildx/pull/535
    # BE CAREFULLY! There are some hardcoded versions for new backend requirements.
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: v0.6.3
        driver-opts: image=moby/buildkit:v0.9.2,network=host
        buildkitd-flags: --debug
    - name: Login to github package registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_PAT_GHCR }}
    # fix for "buildx failed with: error: invalid tag "ghcr.io/MindHunter86/NexusCloner:latest": repository name must be lowercase"
    # https://github.community/t/additional-function-s-lowercase-uppercase/140632
    - name: Get lowercase repository name
      run: |
        echo "GH_LWREPONAME=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}
    - name: Build & push docker image
      uses: docker/build-push-action@v2
      with:
        push: true
        context: nexuscloner
        tags: ghcr.io/${{ env.GH_LWREPONAME }}:${{ needs.parse_phase.outputs.build_tag }}
        cache-from: type=gha
        cache-to: type=gha
  binary_build_pahse:
    name: Build standalone binaries for linux. windows, mac OS
    runs-on: ubuntu-latest
    needs: [ parse_phase ]
    strategy:
      max-parallel: 20 # github free plan value
      matrix:
        goos: ["linux", "windows", "darwin"]
        goarch: ["386", "amd64"]
        include: # I think it's true tone build for A* and M1 processes
        - goos: darwin
          goarch: arm64
        - goos: windows
          goarch: 386
          extention: .exe
        - goos: windows
          goarch: amd64
          extention: .exe
        exclude:
        - goos: darwin
          goarch: 386
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: Install upx
      run: sudo apt-get install -y upx
    - name: Download all required imports
      run: go mod download
    - name: Build source code for ${{ matrix.goos }} ${{ matrix.goarch }}
      run: go build -ldflags="-s -w -X 'main.version=${{ needs.parse_phase.outputs.build_tag }}'" -o ./NexusCloner-${{ matrix.goos }}.${{ matrix.goarch }}${{ matrix.extention }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
    - name: Compress binary
      run: upx -9 -k ./NexusCloner-${{ matrix.goos }}.${{ matrix.goarch }}${{ matrix.extention }}
    - name: Upload release asset
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.parse_phase.outputs.build_tag }}
        files: ./NexusCloner-${{ matrix.goos }}.${{ matrix.goarch }}${{ matrix.extention }}
        token: ${{ secrets.GH_PAT_RELEASES }}
